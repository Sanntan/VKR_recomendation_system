from sqlalchemy.orm import Session
from datetime import date
from sqlalchemy import text
from uuid import uuid4

from src.core.database.connection import engine

# ‚úÖ –ò–º–ø–æ—Ä—Ç—ã –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö CRUD
from src.core.database.crud.students import create_student
from src.core.database.crud.directions import create_direction
from src.core.database.crud.clusters import create_cluster
from src.core.database.crud.events import create_event
from src.core.database.crud.event_clusters import add_event_to_cluster
from src.core.database.crud.recommendations import create_recommendation
from src.core.database.crud.feedback import create_feedback


# ‚úÖ –û—á–µ—Ä–µ–¥–Ω–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü —Å —É—á—ë—Ç–æ–º foreign keys
TABLES = [
    "recommendations",
    "feedback",
    "event_clusters",
    "events",
    "students",
    "directions",
    "clusters"
]


def reset_database(session: Session):
    print("‚öôÔ∏è –û—á–∏—Å—Ç–∫–∞ —Ç–∞–±–ª–∏—Ü –ø–µ—Ä–µ–¥ —Ç–µ—Å—Ç–æ–º...\n")

    for table in TABLES:
        session.execute(
            text(f"TRUNCATE TABLE {table} RESTART IDENTITY CASCADE;")
        )

    session.commit()
    print("‚úÖ –¢–∞–±–ª–∏—Ü—ã –æ—á–∏—â–µ–Ω—ã.\n")


def main():
    with Session(engine) as session:
        reset_database(session)

        # === 1. –°–æ–∑–¥–∞—ë–º –∫–ª–∞—Å—Ç–µ—Ä ===
        cluster = create_cluster(session, title="–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ")
        print(f"üìÇ –ö–ª–∞—Å—Ç–µ—Ä —Å–æ–∑–¥–∞–Ω: {cluster.title}")

        # === 2. –°–æ–∑–¥–∞—ë–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫ –∫–ª–∞—Å—Ç–µ—Ä—É ===
        direction = create_direction(session, title="–ü—Ä–∏–∫–ª–∞–¥–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", cluster_id=cluster.id)
        print(f"üìò –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ: {direction.title} ‚Üí cluster: {cluster.title}")

        # === 3. –°–æ–∑–¥–∞—ë–º —Å—Ç—É–¥–µ–Ω—Ç–∞ ===
        student = create_student(
            db=session,
            participant_id="U-001",
            institution="–¢—é–º–ì–£",
            direction_id=direction.id,
            profile_embedding=None
        )
        print(f"üë®‚Äçüéì –°—Ç—É–¥–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω: {student.participant_id} ‚Üí direction: {direction.title}")

        # === 4. –°–æ–∑–¥–∞—ë–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ===
        event = create_event(
            db=session,
            title="–•–∞–∫–∞—Ç–æ–Ω –ø–æ –∞–Ω–∞–ª–∏–∑—É –¥–∞–Ω–Ω—ã—Ö",
            description="–°–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ –ø–æ Data Science.",
            short_description="–•–∞–∫–∞—Ç–æ–Ω",
            format="–û—á–Ω–æ",
            start_date=date(2025, 5, 10),
            end_date=date(2025, 5, 12),
            link="https://leader-id.ru/events/test",
            image_url=None,
            vector_embedding=None,
            cluster_ids=None
        )
        print(f"üéØ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —Å–æ–∑–¥–∞–Ω–æ: {event.title}")

        # === 5. –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏—è –∫ –∫–ª–∞—Å—Ç–µ—Ä—É ===
        add_event_to_cluster(session, event.id, cluster.id)
        print(f"üîó Event ‚Üî Cluster —Å–≤—è–∑–∞–Ω—ã: {event.title} ‚Üí {cluster.title}")

        # === 6. –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é ===
        rec = create_recommendation(session, student.id, event.id, score=0.92)
        print(f"üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞: student={student.participant_id}, event={event.title}, score={rec.score}")

        # === 7. –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–∑—ã–≤ ===
        fb = create_feedback(session, student.id, rating=5, comment="–û—á–µ–Ω—å –∫—Ä—É—Ç–æ!")
        print(f"üìù –û—Ç–∑—ã–≤ –¥–æ–±–∞–≤–ª–µ–Ω: rating={fb.rating}, comment='{fb.comment}'")

        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –±–∞–∑—É!\n")


if __name__ == "__main__":
    main()
